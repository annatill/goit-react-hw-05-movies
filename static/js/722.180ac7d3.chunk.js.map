{"version":3,"file":"static/js/722.180ac7d3.chunk.js","mappings":"iQAEaA,EAAQC,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6HAQnBC,EAAQH,EAAAA,EAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qSAiBpBG,EAASL,EAAAA,EAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mRAiBtBK,EAAOP,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8HAShBO,EAAWT,EAAAA,EAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kKAWpBS,EAAOX,EAAAA,EAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sG,2BC+B5B,EAtFe,WACb,IAAAW,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpCG,GAAgDV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACtCG,GAAWC,EAAAA,EAAAA,OAqBjBC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACRC,EAAuC,QAA5BD,EAAGT,EAAaW,IAAI,gBAAQ,IAAAF,EAAAA,EAAI,GAC7B,KAAhBC,IAGJL,EAAoBK,IACpBE,EAAAA,EAAAA,IAAYF,GAAaG,KAAKjB,GAChC,GAAG,CAACI,IAOJ,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACrC,EAAK,CAACwC,SAnCU,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAQhB,EAAiBiB,OACjB,KAAVD,EAaJnB,EAAgB,CAAEqB,MAAOF,IAZvBG,EAAAA,GAAAA,MAAY,2BAA4B,CACtCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,QAKb,EAkBkChB,SAAA,EAC5BiB,EAAAA,EAAAA,KAACpD,EAAK,CACJqD,KAAK,OACLd,MAAOhB,EACP+B,SAXwB,SAAAjB,GAC9Bb,EAAoBa,EAAMkB,OAAOhB,MACnC,EAUQiB,YAAY,mBAEdJ,EAAAA,EAAAA,KAAClD,EAAM,CAACmD,KAAK,SAAQlB,SAAC,eAExBiB,EAAAA,EAAAA,KAACK,EAAAA,GAAc,CAACb,UAAW,OAC3BQ,EAAAA,EAAAA,KAAChD,EAAI,CAAA+B,SACFrB,EAAO4C,KAAI,SAAAC,GACV,IAAIC,EAAYD,EAAME,OAASF,EAAMG,KAKrC,OAJAF,EACEA,EAAUG,OAlBe,GAmBrBH,EAAUI,MAAM,EAnBK,IAmB4B,MACjDJ,GAEJR,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAAgBC,GAAE,GAAAC,OAAKR,EAAMS,IAAMC,MAAO,CAAEC,KAAM7C,GAAWU,UAChEF,EAAAA,EAAAA,MAAC3B,EAAQ,CAAA6B,SAAA,EACPiB,EAAAA,EAAAA,KAAA,OACEmB,IACEZ,EAAMa,YAAW,kCAAAL,OACqBR,EAAMa,aACxCC,EAENC,IAAKf,EAAME,MACXc,MAAM,MACNC,OAAQ,OAETjB,EAAME,OACLT,EAAAA,EAAAA,KAAC5C,EAAI,CAAA2B,SAAEyB,SAbFD,EAAMS,GAoBrB,QAIR,C","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Forma = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 40px;\n  margin-top: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 355px;\n  height: 30px;\n  border-radius: 5px;\n  border: none;\n  padding: 5px 15px;\n  margin-right: 10px;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #e0e1dd;\n  background-color: #09131d;\n  outline: none;\n  &:focus {\n    box-shadow: 0 0 4px 0px #415a77;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 40px;\n  border-radius: 5px;\n  border: none;\n  padding: 0;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #e0e1dd;\n  background-color: #09131d;\n  outline: none;\n  &:focus,\n  &:hover {\n    box-shadow: 0 0 4px 0px #415a77;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 0;\n  margin: 0;\n  gap: 40px;\n`;\n\nexport const ListItem = styled.li`\n  background-color: #09131d;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0 0 4px 0px #415a77;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #ffffff;\n  font-size: 16px;\n  line-height: 1.5;\n  margin: 0;\n  padding: 10px;\n`;\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchSearch } from '../../services/api-service';\nimport { List, ListItem, Text, Forma, Input, Button } from './Movies.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport propTypes from 'prop-types';\nimport samplePlaceholder from '../../image/sample_placeholder.jpg';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [searchParamValue, setSearchParamValue] = useState('');\n  const location = useLocation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const value = searchParamValue.trim();\n    if (value === '') {\n      toast.error('Please enter your movie!', {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n      return;\n    }\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query') ?? '';\n    if (searchQuery === '') {\n      return;\n    }\n    setSearchParamValue(searchQuery);\n    fetchSearch(searchQuery).then(setMovies);\n  }, [searchParams]);\n\n  const handleSearchQueryChange = event => {\n    setSearchParamValue(event.target.value);\n  };\n  const maxCharactersPerMovieTitle = 20;\n\n  return (\n    <>\n      <Forma onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={searchParamValue}\n          onChange={handleSearchQueryChange}\n          placeholder=\"Search movies\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Forma>\n      <ToastContainer autoClose={3000} />\n      <List>\n        {movies.map(movie => {\n          let movieName = movie.title || movie.name;\n          movieName =\n            movieName.length > maxCharactersPerMovieTitle\n              ? movieName.slice(0, maxCharactersPerMovieTitle) + '...'\n              : movieName;\n          return (\n            <Link key={movie.id} to={`${movie.id}`} state={{ from: location }}>\n              <ListItem>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : samplePlaceholder\n                  }\n                  alt={movie.title}\n                  width=\"200\"\n                  height={300}\n                />\n                {movie.title ? (\n                  <Text>{movieName}</Text>\n                ) : (\n                  <Text>{movieName}</Text>\n                )}\n              </ListItem>\n            </Link>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string,\n      name: propTypes.string,\n      poster_path: propTypes.string,\n    })\n  ),\n};\n"],"names":["Forma","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Button","_templateObject3","List","_templateObject4","ListItem","_templateObject5","Text","_templateObject6","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","searchParamValue","setSearchParamValue","location","useLocation","useEffect","_searchParams$get","searchQuery","get","fetchSearch","then","_jsxs","_Fragment","children","onSubmit","event","preventDefault","value","trim","query","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_jsx","type","onChange","target","placeholder","ToastContainer","map","movie","movieName","title","name","length","slice","Link","to","concat","id","state","from","src","poster_path","samplePlaceholder","alt","width","height"],"sourceRoot":""}