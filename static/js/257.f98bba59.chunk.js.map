{"version":3,"file":"static/js/257.f98bba59.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  width: 100px;\n  height: 25px;\n  border-radius: 5px;\n  border: none;\n  padding: 10px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #e0e1dd;\n  background-color: #09131d;\n  outline: none;\n  &:focus,\n  &:hover {\n    box-shadow: 0 0 4px 0px #415a77;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: rgb(224, 225, 221);\n  font-size: 32px;\n  line-height: 2.5;\n  margin: 0;\n  padding: 10px;\n`;\n\nexport const Container = styled.div`\n  padding: 20px;\n  text-align: start;\n`;\n\nexport const ContainerInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding-bottom: 20px;\n  margin-bottom: 20px;\n  border-bottom: 1px solid #2e4059;\n`;\n\nexport const ContainerDescription = styled.div`\n  padding: 0px 30px;\n  text-align: start;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-top: 0;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  margin-right: 10px;\n`;\n\nexport const ListInfo = styled.ul`\n  padding-bottom: 20px;\n  padding-left: 20px;\n  margin: 0;\n  list-style: circle;\n  border-bottom: 1px solid #2e4059;\n`;\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { fetchMovieDetails } from '../../services/api-service';\nimport {\n  Title,\n  Container,\n  ContainerInfo,\n  ContainerDescription,\n  MovieTitle,\n  ListGenres,\n  ListItem,\n  ListInfo,\n  StyledLink,\n} from './MovieDetails.styled';\nimport propTypes from 'prop-types';\nimport samplePlaceholder from '../../image/sample_placeholder.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      <Title>Movie Details</Title>\n      <Container>\n        <StyledLink to={backLinkLocation.current}>Go back</StyledLink>\n        {movie && (\n          <>\n            <ContainerInfo>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : samplePlaceholder\n                }\n                alt={movie.title}\n                width=\"200\"\n              />\n              <ContainerDescription>\n                <MovieTitle>{movie.title}</MovieTitle>\n                <p>User Score: {movie.vote_average * 10}%</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <ListGenres>\n                  {movie.genres.map(genre => (\n                    <ListItem key={genre.id}>{genre.name}</ListItem>\n                  ))}\n                </ListGenres>\n              </ContainerDescription>\n            </ContainerInfo>\n            <h3>Additional information</h3>\n            <ListInfo>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ListInfo>\n            <Suspense fallback={<p>Loading...</p>}>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movie: propTypes.shape({\n    id: propTypes.number.isRequired,\n    poster_path: propTypes.string,\n    title: propTypes.string.isRequired,\n    vote_average: propTypes.number.isRequired,\n    overview: propTypes.string.isRequired,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number.isRequired,\n        name: propTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Container","_templateObject3","ContainerInfo","_templateObject4","ContainerDescription","_templateObject5","MovieTitle","_templateObject6","ListGenres","_templateObject7","ListItem","_templateObject8","ListInfo","_templateObject9","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","backLinkLocation","useRef","state","from","useEffect","fetchMovieDetails","then","_jsxs","_Fragment","children","_jsx","to","current","src","poster_path","concat","samplePlaceholder","alt","title","width","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}