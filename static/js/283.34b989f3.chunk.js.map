{"version":3,"file":"static/js/283.34b989f3.chunk.js","mappings":"6PAEaA,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8HAShBC,EAAWH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kKAWpBG,EAAOL,EAAAA,EAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,sGAQfK,EAAQP,EAAAA,EAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iH,SCyB9B,EAjDa,WACX,IAAAO,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBI,GAAWC,EAAAA,EAAAA,MAOjB,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAgBC,KAAKL,EACvB,GAAG,KAGDM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACf,EAAK,CAAAc,SAAC,oBACPC,EAAAA,EAAAA,KAACvB,EAAI,CAAAsB,SACFR,EAAOU,KAAI,SAAAC,GACV,IAAIC,EAAYD,EAAME,OAASF,EAAMG,KAMrC,OALAF,EACEA,EAAUG,OAbe,GAcrBH,EAAUI,MAAM,EAdK,IAc4B,MACjDJ,GAGJH,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAEHC,GAAI,CACFC,SAAS,WAADC,OAAaT,EAAMU,IAC3BC,MAAO,CAAEC,KAAMrB,IACfM,UAEFD,EAAAA,EAAAA,MAACjB,EAAQ,CAAAkB,SAAA,EACPC,EAAAA,EAAAA,KAAA,OACEe,IAAG,kCAAAJ,OAAoCT,EAAMc,aAC7CC,IAAKf,EAAME,MACXc,MAAM,SAEPhB,EAAME,OACLJ,EAAAA,EAAAA,KAACjB,EAAI,CAAAgB,SAAEI,SAbND,EAAMU,GAoBjB,QAIR,C","sources":["pages/HomePage/Home.styled.jsx","pages/HomePage/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 0;\n  margin: 0;\n  gap: 40px;\n`;\n\nexport const ListItem = styled.li`\n  background-color: #09131d;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0 0 4px 0px #415a77;\n  }\n`;\n\nexport const Text = styled.p`\n  color: #ffffff;\n  font-size: 16px;\n  line-height: 1.5;\n  margin: 0;\n  padding: 10px;\n`;\n\nexport const Title = styled.h1`\n  color: rgb(224, 225, 221);\n  font-size: 32px;\n  line-height: 2.5;\n  margin: 0;\n  padding: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from '../../services/api-service';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, Text, Title } from './Home.styled';\nimport propTypes from 'prop-types';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const maxCharactersPerMovieTitle = 20;\n\n  useEffect(() => {\n    fetchTrending().then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending today</Title>\n      <List>\n        {movies.map(movie => {\n          let movieName = movie.title || movie.name;\n          movieName =\n            movieName.length > maxCharactersPerMovieTitle\n              ? movieName.slice(0, maxCharactersPerMovieTitle) + '...'\n              : movieName;\n\n          return (\n            <Link\n              key={movie.id}\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              <ListItem>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"200\"\n                />\n                {movie.title ? (\n                  <Text>{movieName}</Text>\n                ) : (\n                  <Text>{movieName}</Text>\n                )}\n              </ListItem>\n            </Link>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      poster_path: propTypes.string,\n      title: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n    })\n  ),\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Text","_templateObject3","Title","_templateObject4","_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","useEffect","fetchTrending","then","_jsxs","children","_jsx","map","movie","movieName","title","name","length","slice","Link","to","pathname","concat","id","state","from","src","poster_path","alt","width"],"sourceRoot":""}